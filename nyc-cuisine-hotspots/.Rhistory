map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.02
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.03
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "American"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Creole/Cajun"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Juice, Smoothies, Fruit Salads"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Chinese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Chinese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.0001
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Chinese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Latin American"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
View(map_dbscan_clusters)
View(map_dbscan_clusters)
View(run_dbscan_by_borough)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# Load packages
library(tidyverse)
library(janitor)
library(sf)
library(dbscan)
library(tmap)
library(leaflet)
library(tidycensus)
library(tigris)
library(skimr)
library(RSocrata)
library(RColorBrewer)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.005,
"Staten Island" = 0.008
)
boro_test_cuisine = "Latin American"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Latin American"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Chinese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Pizza"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Korean"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Japanese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Seafood"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Middle Eastern"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Greek"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Indian"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Thai"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Peruvian"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Russian"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
run_dbscan_by_borough <- function(data, cuisine, eps_values, min_floor = 3, prop_factor = 0.02) {
# eps_values = named vector with borough groupings
# e.g., c("Manhattan" = 0.0025, "Brooklyn/Queens" = 0.005, "Bronx" = 0.006, "Staten Island" = 0.008)
# Filter for chosen cuisine & clean coords
cuisine_data <- data %>%
filter(
cuisine_description == cuisine,
!is.na(latitude),
!is.na(longitude),
latitude != 0,
longitude != 0
)
# Dynamic minPts based on citywide restaurant count
total_count <- nrow(cuisine_data)
minPts <- max(min_floor, round(total_count * prop_factor))
# Group boroughs
cuisine_data <- cuisine_data %>%
mutate(boro_group = case_when(
boro == "Manhattan" ~ "Manhattan",
boro %in% c("Brooklyn", "Queens") ~ "Brooklyn/Queens",
boro == "Bronx" ~ "Bronx",
boro == "Staten Island" ~ "Staten Island",
TRUE ~ "Other"
))
all_results <- list()
cluster_offset <- 0
# Loop through each borough group
for (grp in unique(cuisine_data$boro_group)) {
eps <- eps_values[[grp]]
sub_data <- cuisine_data %>% filter(boro_group == grp)
if (nrow(sub_data) == 0) next
coords <- sub_data %>%
select(longitude, latitude) %>%
as.matrix()
db_result <- dbscan::dbscan(coords, eps = eps, minPts = minPts)
# Offset cluster IDs so they are unique across boroughs
sub_data <- sub_data %>%
mutate(cluster = ifelse(db_result$cluster == 0, 0, db_result$cluster + cluster_offset))
# Update offset for next borough
cluster_offset <- max(max(sub_data$cluster, na.rm = TRUE), cluster_offset)
all_results[[grp]] <- sub_data
}
final_data <- bind_rows(all_results)
return(final_data)
}
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Russian"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Asian/Asian Fusion"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
eps_settings <- c(
"Manhattan" = 0.004,
"Brooklyn/Queens" = 0.007,
"Bronx" = 0.006,
"Staten Island" = 0.008
)
boro_test_cuisine = "Japanese"
test2_clusters <- run_dbscan_by_borough(
data = restaurants_unique,
cuisine = boro_test_cuisine,
eps_values = eps_settings,
min_floor = 5,
prop_factor = 0.015
)
map_dbscan_clusters(test2_clusters)
